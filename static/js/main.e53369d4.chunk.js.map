{"version":3,"sources":["components/MaterialLayer.module.scss","components/YesNo.module.scss","components/AppWrapper.module.scss","components/Summary.module.scss","components/CustomSelect.module.scss","components/Result.module.scss","config/izolation.js","config/layout.js","config/index.js","utils/cx.js","utils/calculations.js","utils/formatters.js","components/YesNo.js","utils/file-saver.js","components/Advert.js","components/AppWrapper.js","components/CustomSelect.js","components/DecimalStep.js","components/DependentFields.js","components/Field.js","components/MaterialLayer.js","components/Result.js","components/Summary.js","App.js","index.js","components/Advert.module.scss"],"names":["module","exports","MATERIAL_CATEGORIES","Object","freeze","ASPHALT","CONCRETE","CERAMICS","TILES","WOOD","GASES","GYPSUM","LAND","STONE","TERMOIZOLATION","METAL","FELT","FLOORING","PLASTER","BACKFILL","materialCategoriesExamples","description","examples","value","IZOLATION_TYPES","WHITE_POLISTYREN","GRAFITE_POLISTYREN","HARD_POLISTYREN","WOOL","FOAM","GRANULATE","izolationTypes","from","to","defaultValue","columnsLayout","minimal","xs","sm","md","lg","xl","xxl","short","default","double","full","span","summaryColumn","formLayout","layout","hideRequiredMark","rowLayout","gutter","BUILDING_ALLOW_YEARS","BEFORE1983","F1983T1991","F1992T1998","AFTER1998","FIELDS","BUILDING_YEAR","MODERNIZATION_ITEM","PREVIOUS_WARMED","SELF_BEFORE_CALC","PREV_IZOLATION_TYPE","PREV_IZOLATION_WIDTH","MATERIAL_LAYERS","MATERIAL_CATEGORY","MATERIAL_CATEGORY_SPECIFIC","MATERIAL_CATEGORY_WIDTH","PLANED_MATERIAL","PLANED_LAMBDA","REQUIRED_IZOLATION","BEFORE_WARMING_U","RESULT","fieldNames","izolationWidthConfig","min","max","step","unit","lambdaSelectConfig","PARTITION_TYPES","SIDE_WALLS","ROOF","CEILING_ATTIC","FLOOR","CEILING_BASEMENT","partitionTypes","requiredIzolation","buildingAllowYears","avarageU","classnames","canCalculatePrevU","values","BOOLEAN_TYPES","YES","NO","checkLayersData","layers","length","some","x","undefined","calculatePrevU","year","warmed","self","what","prevIzolation","prevIzolationWidth","materialLayers","layerResistance","layersResistance","calculateRequiredWidth","planedLambda","modernizedItem","prevU","reduce","res","category","idx","width","lambda","formatNumber","num","position","parseFloat","toFixed","Math","round","booleanMap","className","props","Group","buttonStyle","cx","styles","RadioGroup","keys","map","bool","Button","RadioItem","key","getFileContents","buildingYear","modernizationItem","plannedLambda","plannedMaterial","existingIzolation","selfBeforeCalculations","layer","index","existingLayer","existingLayerSpecific","existingLayerWidth","join","result","ceil","plannedMaterialText","replace","downloadFile","fileName","text","pom","document","createElement","setAttribute","encodeURIComponent","createEvent","event","initEvent","dispatchEvent","click","Advert","open","children","CSSTransition","in","Boolean","unmountOnExit","timeout","classNames","enter","Enter","enterActive","Enter__Active","exit","Exit","exitActive","Exit__Active","Container","Arrow","App","Option","assign","onClick","dropdownClassName","Select","sanitize","precition","roundToStep","onChange","floor","log10","valueChange","useCallback","v","tipFormatter","marks","style","whiteSpace","label","dependencies","requirement","noMatch","Item","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","name","rules","required","message","validateTrigger","ValueProvider","params","useBreakpoint","Title","counter","first","last","remove","categoryChange","responsive","fieldClassName","Row__New","Row__Responsive","showLabel","NewRow","title","placement","type","icon","MinusCircleOutlined","danger","level","entries","disabled","DecimalStep","Add","add","PlusOutlined","Wrapper","Text","RESULT_STATUSES","NEUTRAL","POSITIVE","NEGATIVE","status","Result","Result__Negative","Result__Neutral","Result__Positive","Content","Value","appear","Appear","appearActive","Appear__Active","success","Summary","Summary__Success","initialFormValue","preCalculateDependencies","calculateDependencies","PreCalculations","canCalculate","paddingBottom","strong","previoslyWarmed","selfCalcutation","Calculator","useForm","form","initialValues","YesNo","target","setFieldsValue","DependentFields","List","fields","field","MAXIMUM_LAYERS","Array","_","DownloadOutlined","contents","saveFile","planedMaterial","canCalculateWidth","ReactDOM","render","StrictMode","AppWrapper","getElementById"],"mappings":"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","file":"static/js/main.e53369d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Add\":\"MaterialLayer_Add__RvqSN\",\"Row__New\":\"MaterialLayer_Row__New__3KOXp\",\"Row__Responsive\":\"MaterialLayer_Row__Responsive__1glj_\",\"Title\":\"MaterialLayer_Title__1ycLJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RadioGroup\":\"YesNo_RadioGroup__5yCrj\",\"RadioItem\":\"YesNo_RadioItem__3rqLt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"AppWrapper_App__3hFsG\",\"Container\":\"AppWrapper_Container__pf_EW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Summary\":\"Summary_Summary__3_ifK\",\"Summary__Success\":\"Summary_Summary__Success__2-_NB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"CustomSelect_Select__3vCKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Result\":\"Result_Result__lQnIf\",\"Result__Positive\":\"Result_Result__Positive__1uUQ6\",\"Content\":\"Result_Content__1glBb\",\"Result__Negative\":\"Result_Result__Negative__3Y3Wu\",\"Value\":\"Result_Value__mpvYu\",\"Appear\":\"Result_Appear__5Cc5s\",\"Appear__Active\":\"Result_Appear__Active__SC7eP\"};","export const MATERIAL_CATEGORIES = Object.freeze({\r\n  ASPHALT: \"asphalt\",\r\n  CONCRETE: \"concrete\",\r\n  CERAMICS: \"ceramics\",\r\n  TILES: \"tiles\",\r\n  WOOD: \"wood\",\r\n  GASES: \"gases\",\r\n  GYPSUM: \"gypsum\",\r\n  LAND: \"land\",\r\n  STONE: \"stone\",\r\n  TERMOIZOLATION: \"termoizolation\",\r\n  METAL: \"metal\",\r\n  FELT: \"felt\",\r\n  FLOORING: \"flooring\",\r\n  PLASTER: \"plaster\",\r\n  BACKFILL: \"backfill\",\r\n});\r\n\r\nexport const materialCategoriesExamples = {\r\n  [MATERIAL_CATEGORIES.ASPHALT]: {\r\n    description: \"Asfalty\",\r\n    examples: [\r\n      {\r\n        description: \"Asfalt lany (gęstość 1800)\",\r\n        value: 0.75,\r\n      },\r\n      {\r\n        description: \"Asfaltobeton (gęstość 2100)\",\r\n        value: 1,\r\n      },\r\n    ],\r\n  },\r\n  [MATERIAL_CATEGORIES.CONCRETE]: {\r\n    description: \"Beton zwykły i przegrody z betonu\",\r\n    examples: [\r\n      {\r\n        description: \"Żelbet (gęstość 2500)\",\r\n        value: 1.7,\r\n      },\r\n      {\r\n        description: \"Beton zwykły z kruszywa kamiennego (gęstość 2200)\",\r\n        value: 1.3,\r\n      },\r\n      {\r\n        description: \"Beton z kruszywa wapiennego (gęstość 1600)\",\r\n        value: 0.72,\r\n      },\r\n      {\r\n        description: \"Beton z żużla pumeksowego (gęstość 1600)\",\r\n        value: 0.54,\r\n      },\r\n      {\r\n        description: \"Beton z żużla paleniskowego (gęstość 1600)\",\r\n        value: 0.72,\r\n      },\r\n      {\r\n        description: \"Beton z kruszywa keramzytowego (gęstość 1600)\",\r\n        value: 0.9,\r\n      },\r\n      {\r\n        description: \"Wiórobeton i wiórotrocinobeton (gęstość 1000)\",\r\n        value: 0.3,\r\n      },\r\n      {\r\n        description: \"Wiórobeton i wiórotrocinobeton (gęstość 600)\",\r\n        value: 0.17,\r\n      },\r\n      {\r\n        description: \"Mur z betonu komórkowego na cienkowarstwowej zaprawie klejącej (gęstość 800)\",\r\n        value: 0.29,\r\n      },\r\n      {\r\n        description: \"Mur z betonu komórkowego na cienkowarstwowej zaprawie klejącej (gęstość 500)\",\r\n        value: 0.17,\r\n      },\r\n      {\r\n        description: \"Mur z betonu komórkowego na zaprawie cementowo-wapiennej o grubości 1,5 cm (gęstość 800)\",\r\n        value: 0.38,\r\n      },\r\n      {\r\n        description: \"Mur z betonu komórkowego na zaprawie cementowo-wapiennej o grubości 1,5 cm (gęstość 500)\",\r\n        value: 0.25,\r\n      },\r\n      {\r\n        description: \"Mur z pustaków żużlobetonowych ALFA,KONTRA (gęstość 1100)\",\r\n        value: 0.63,\r\n      },\r\n    ],\r\n  },\r\n  [MATERIAL_CATEGORIES.CERAMICS]: {\r\n    description: \"Ceramika budowlana  i przegrody z ceramiki budowlanej\",\r\n    examples: [\r\n      {\r\n        description: \"Mur z cegły ceramicznej pełnej (gęstość 1800)\",\r\n        value: 0.77,\r\n      },\r\n      {\r\n        description: \"Mur z cegły dziurawki (gęstość 1400)\",\r\n        value: 0.62,\r\n      },\r\n      {\r\n        description: \"Mur z cegły kratówki (gęstość 1300)\",\r\n        value: 0.56,\r\n      },\r\n      {\r\n        description: \"Mur z cegły klinkierowej (gęstość 1900)\",\r\n        value: 1.05,\r\n      },\r\n      {\r\n        description: \"Mur z cegły silikatowej pełnej (gęstość 1900)\",\r\n        value: 1,\r\n      },\r\n      {\r\n        description: \"Mur z cegły silikatowej drążonej i z bloków drążonych (gęstość 1600)\",\r\n        value: 0.8,\r\n      },\r\n      {\r\n        description: \"Mur z pustaków ceramicznych MAX (gęstość 1100)\",\r\n        value: 0.44,\r\n      },\r\n      {\r\n        description: \"Mur z pustaków ceramicznych UNI (gęstość 1100)\",\r\n        value: 0.48,\r\n      },\r\n      {\r\n        description: \"Mur z pustaków ceramicznych SZ (gęstość 1000)\",\r\n        value: 0.45,\r\n      },\r\n      {\r\n        description: \"Mur z pustaków ceramicznych M-44 (gęstość 1070)\",\r\n        value: 0.6,\r\n      },\r\n      {\r\n        description: \"Mur z pustaków porotherm 11P+W (gęstość 800)\",\r\n        value: 0.359,\r\n      },\r\n      {\r\n        description: \"Mur z pustaków porotherm 18P+W (gęstość 800)\",\r\n        value: 0.453,\r\n      },\r\n      {\r\n        description: \"Mur z pustaków porotherm 25P+W (gęstość 800)\",\r\n        value: 0.377,\r\n      },\r\n      {\r\n        description: \"Mur z pustaków porotherm 30P+W (gęstość 800)\",\r\n        value: 0.231,\r\n      },\r\n      {\r\n        description: \"Mur z pustaków porotherm 38P+W (gęstość 800)\",\r\n        value: 0.167,\r\n      },\r\n      {\r\n        description: \"Mur z pustaków porotherm 44P+W (gęstość 800)\",\r\n        value: 0.169,\r\n      },\r\n      {\r\n        description: \"Mur z pustaków porotherm 50P+W (gęstość 800)\",\r\n        value: 0.18,\r\n      },\r\n    ],\r\n  },\r\n  [MATERIAL_CATEGORIES.TILES]: {\r\n    description: \"Dachówki\",\r\n    examples: [\r\n      {\r\n        description: \"Ceramiczne (gęstość 2000)\",\r\n        value: 1,\r\n      },\r\n      {\r\n        description: \"Cementowe (gęstość 2100)\",\r\n        value: 1.5,\r\n      }\r\n    ],\r\n  },\r\n  [MATERIAL_CATEGORIES.WOOD]: {\r\n    description: \"Drewno i materiały drewnopochodne\",\r\n    examples: [\r\n      {\r\n        description: \"Dąb – w poprzek włókien (gęstość 800)\",\r\n        value: 0.22,\r\n      },\r\n      {\r\n        description: \"Dąb – wzdłuż włókien (gęstość 800)\",\r\n        value: 0.4,\r\n      },\r\n      {\r\n        description: \"Sosna i świerk – w poprzek włókien (gęstość 550)\",\r\n        value: 0.16,\r\n      },\r\n      {\r\n        description: \"Sosna i świerk – wzdłuż włókien (gęstość 550)\",\r\n        value: 0.3,\r\n      },\r\n      {\r\n        description: \"Sklejka\",\r\n        value: 0.16,\r\n      },\r\n      {\r\n        description: \"Płyta OSB (gęstość 650)\",\r\n        value: 0.13,\r\n      },\r\n      {\r\n        description: \"Płyta pilśniowa (gęstość 600)\",\r\n        value: 0.14,\r\n      },\r\n      {\r\n        description: \"Płyta wiórowo-cementowa (gęstość 1200)\",\r\n        value: 0.23,\r\n      },\r\n      {\r\n        description: \"Płyta wiórowa (gęstość 600)\",\r\n        value: 0.14,\r\n      },\r\n    ],\r\n  },\r\n  [MATERIAL_CATEGORIES.GASES]: {\r\n    description: \"Gazy\",\r\n    examples: [\r\n      {\r\n        description: \"Powietrze (gęstość 1,23)\",\r\n        value: 0.025,\r\n      },\r\n    ],\r\n  },\r\n  [MATERIAL_CATEGORIES.GYPSUM]: {\r\n    description: \"Gips, wyroby zabezpieczone przed zawilgoceniem\",\r\n    examples: [\r\n      {\r\n        description: \"Gips (gęstość 600)\",\r\n        value: 0.18,\r\n      },\r\n      {\r\n        description: \"Gips (gęstość 1500)\",\r\n        value: 0.56,\r\n      },\r\n      {\r\n        description: \"Płyty i bloki z gipsu (gęstość 1000)\",\r\n        value: 0.35,\r\n      },\r\n      {\r\n        description: \"Gipsobeton piaskowy (gęstość 1300)\",\r\n        value: 0.52,\r\n      },\r\n      {\r\n        description: \"Gazogips (gęstość 500)\",\r\n        value: 0.19,\r\n      },\r\n      {\r\n        description: \"Płyty gipsowo-kartonowe (gęstość 900)\",\r\n        value: 0.23,\r\n      },\r\n    ],\r\n  },\r\n  [MATERIAL_CATEGORIES.LAND]: {\r\n    description: \"Grunty\",\r\n    examples: [\r\n      {\r\n        description: \"Glina (gęstość 1800)\",\r\n        value: 0.85,\r\n      },\r\n      {\r\n        description: \"Glina piaszczysta (gęstość 1800)\",\r\n        value: 0.7,\r\n      },\r\n      {\r\n        description: \"Glina lub ił (gęstość 1800)\",\r\n        value: 1.5,\r\n      },\r\n      {\r\n        description: \"Piasek średni (gęstość 1800)\",\r\n        value: 0.4,\r\n      },\r\n      {\r\n        description: \"Piasek i żwir (gęstość 1700)\",\r\n        value: 2,\r\n      },\r\n      {\r\n        description: \"Żwir (gęstość 1800)\",\r\n        value: 0.9,\r\n      },\r\n    ],\r\n  },\r\n  [MATERIAL_CATEGORIES.STONE]: {\r\n    description: \"Kamienie naturalne\",\r\n    examples: [\r\n      {\r\n        description: \"Piaskowiec (gęstość 2400)\",\r\n        value: 2.2,\r\n      },\r\n      {\r\n        description: \"Wapień twardy (gęstość 2200)\",\r\n        value: 1.7,\r\n      },\r\n      {\r\n        description: \"Granit (gęstość 2500)\",\r\n        value: 3.5,\r\n      },\r\n      {\r\n        description: \"Bazalt (gęstość 2700)\",\r\n        value: 3.5,\r\n      },\r\n      {\r\n        description: \"Pumeks naturalny (gęstość 400)\",\r\n        value: 0.12,\r\n      },\r\n      {\r\n        description: \"Mur z kamienia łamanego z zawartością zaprawy 35% objętościowo przy zawartości kamienia 2800 kg/m3\",\r\n        value: 2.55,\r\n      },\r\n    ],\r\n  },\r\n  [MATERIAL_CATEGORIES.TERMOIZOLATION]: {\r\n    description: \"Materiały termoizolacyjne\",\r\n    examples: [\r\n      {\r\n        description: \"Płyty korkowe ekspandowane (gęstość 150)\",\r\n        value: 0.045,\r\n      },\r\n      {\r\n        description: \"Płyty korkowe asfaltowane (gęstość 250)\",\r\n        value: 0.07,\r\n      },\r\n      {\r\n        description: \"Płyty ze słomy (gęstość 300)\",\r\n        value: 0.08,\r\n      },\r\n      {\r\n        description: \"Płyty z trzciny (gęstość 250)\",\r\n        value: 0.07,\r\n      },\r\n      {\r\n        description: \"Szkło piankowe białe (gęstość 300)\",\r\n        value: 0.12,\r\n      },\r\n      {\r\n        description: \"Szkło piankowe czarne (gęstość 180)\",\r\n        value: 0.07,\r\n      },\r\n      {\r\n        description: \"Maty z włókna szklanego (gęstość 100)\",\r\n        value: 0.045,\r\n      },\r\n      {\r\n        description: \"Wełna mineralna luzem w ścianach (gęstość 60)\",\r\n        value: 0.043,\r\n      },\r\n      {\r\n        description: \"Wełna mineralna luzem w stropach (gęstość 60)\",\r\n        value: 0.052,\r\n      },\r\n      {\r\n        description: \"Wełna mineralna granulowana (gęstość 60)\",\r\n        value: 0.05,\r\n      },\r\n      {\r\n        description: \"Maty i płyty w wełny mineralnej (gęstość 100)\",\r\n        value: 0.042,\r\n      },\r\n      {\r\n        description: \"Wełna mineralna FASROCK MAX (gęstość 100)\",\r\n        value: 0.038,\r\n      },\r\n      {\r\n        description: \"Wełna mineralna STROPROCK (gęstość 160)\",\r\n        value: 0.042,\r\n      },\r\n      {\r\n        description: \"Wełna mineralna DACHROCK (gęstość 150)\",\r\n        value: 0.041,\r\n      },\r\n      {\r\n        description: \"Styropian ekspandowany EPS (gęstość 30)\",\r\n        value: 0.034,\r\n      },\r\n      {\r\n        description: \"Styropian ekstrudowany XPS (gęstość 10)\",\r\n        value: 0.045,\r\n      },\r\n      {\r\n        description: \"Styropian ekstrudowany XPS (gęstość 20)\",\r\n        value: 0.042,\r\n      },\r\n      {\r\n        description: \"Styropian ekstrudowany XPS (gęstość 40)\",\r\n        value: 0.04,\r\n      },\r\n      {\r\n        description: \"Pianka poliuretanowa – w szczelnej osłonie (gęstość 40)\",\r\n        value: 0.025,\r\n      },\r\n      {\r\n        description: \"Pianka poliuretanowa – w pozostałych przypadkach (gęstość 40)\",\r\n        value: 0.035,\r\n      },\r\n      {\r\n        description: \"Włóknina syntetyczna (gęstość 100)\",\r\n        value: 0.045,\r\n      },\r\n      {\r\n        description: \"Granulat ekofiber (celulozowy) (gęstość 32)\",\r\n        value: 0.039,\r\n      },\r\n    ],\r\n  },\r\n  [MATERIAL_CATEGORIES.METAL]: {\r\n    description: \"Metale\",\r\n    examples: [\r\n      {\r\n        description: \"Stal budowlana (gęstość 7800)\",\r\n        value: 58,\r\n      },\r\n    ],\r\n  },\r\n  [MATERIAL_CATEGORIES.FELT]: {\r\n    description: \"Papa\",\r\n    examples: [\r\n      {\r\n        description: \"Papa asfaltowa (1000)\",\r\n        value: 0.18,\r\n      },\r\n    ],\r\n  },\r\n  [MATERIAL_CATEGORIES.FLOORING]: {\r\n    description: \"Posadzki i wykładziny podłogowe\",\r\n    examples: [\r\n      {\r\n        description: \"Wykładzina podłogowa PCV (gęstość 1300)\",\r\n        value: 0.2,\r\n      },\r\n      {\r\n        description: \"Wykładzina dywanowa (gęstość 200)\",\r\n        value: 0.06,\r\n      },\r\n      {\r\n        description: \"Płytki okładzinowe ceramicznie, terrakota (gęstość 1000)\",\r\n        value: 1.05,\r\n      },\r\n    ],\r\n  },\r\n  [MATERIAL_CATEGORIES.PLASTER]: {\r\n    description: \"Tynki i zaprawy tynkarskie\",\r\n    examples: [\r\n      {\r\n        description: \"Tynk gipsowy (gęstość 1000)\",\r\n        value: 0.4,\r\n      },\r\n      {\r\n        description: \"Tynk gipsowy (gęstość 1300)\",\r\n        value: 0.57,\r\n      },\r\n      {\r\n        description: \"Tynk gipsowo-piaskowy (gęstość 1600)\",\r\n        value: 0.8,\r\n      },\r\n      {\r\n        description: \"Tynk lub gładź cementowo-wapienna (gęstość 1850)\",\r\n        value: 0.82,\r\n      },\r\n      {\r\n        description: \"Tynk wapienny (gęstość 1700)\",\r\n        value: 0.7,\r\n      },\r\n      {\r\n        description: \"Tynk wapienno-piaskowy (gęstość 1600)\",\r\n        value: 0.8,\r\n      },\r\n    ],\r\n  },\r\n  [MATERIAL_CATEGORIES.BACKFILL]: {\r\n    description: \"Zasypki\",\r\n    examples: [\r\n      {\r\n        description: \"Żużel paleniskowy (gęstość 1000)\",\r\n        value: 0.28,\r\n      },\r\n      {\r\n        description: \"Żużel wielkopiecowy granulowany, keramzyt (gęstość 900)\",\r\n        value: 0.26,\r\n      },\r\n      {\r\n        description: \"Wióry drzewne luzem (gęstość 150)\",\r\n        value: 0.07,\r\n      },\r\n      {\r\n        description: \"Wióry drzewne ubijane (gęstość 300)\",\r\n        value: 0.09,\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport const IZOLATION_TYPES = Object.freeze({\r\n  WHITE_POLISTYREN: \"whitePolistyren\",\r\n  GRAFITE_POLISTYREN: \"grafitePolistyren\",\r\n  HARD_POLISTYREN: \"hardPolistyren\",\r\n  WOOL: \"wool\",\r\n  FOAM: \"foam\",\r\n  GRANULATE: \"granulate\",\r\n});\r\n\r\nexport const Rsi = 0.13;\r\nexport const Rse = 0.04;\r\n\r\nexport const izolationTypes = {\r\n  [IZOLATION_TYPES.WHITE_POLISTYREN]: {\r\n    description: \"Styropian biały\",\r\n    from: 36,\r\n    to: 45,\r\n    defaultValue: 40,\r\n  },\r\n  [IZOLATION_TYPES.GRAFITE_POLISTYREN]: {\r\n    description: \"Styropian grafitowy\",\r\n    from: 30,\r\n    to: 36,\r\n    defaultValue: 33,\r\n  },\r\n  [IZOLATION_TYPES.HARD_POLISTYREN]: {\r\n    description: \"Styropian twardy\",\r\n    from: 28,\r\n    to: 42,\r\n    defaultValue: 35,\r\n  },\r\n  [IZOLATION_TYPES.WOOL]: {\r\n    description: \"Wełna mineralna\",\r\n    from: 30,\r\n    to: 45,\r\n    defaultValue: 38,\r\n  },\r\n  [IZOLATION_TYPES.FOAM]: {\r\n    description: \"Pianka poliuretanowa\",\r\n    from: 22,\r\n    to: 40,\r\n    defaultValue: 30,\r\n  },\r\n  [IZOLATION_TYPES.GRANULATE]: {\r\n    description: \"Granulat ocieplenia (włóknocelulowa, wełna mineralna)\",\r\n    from: 36,\r\n    to: 55,\r\n    defaultValue: 39,\r\n  },\r\n};\r\n","export const columnsLayout = {\r\n  minimal: {\r\n    xs: 3,\r\n    sm: 2,\r\n    md: 2,\r\n    lg: 1,\r\n    xl: 1,\r\n    xxl: 1,\r\n  },\r\n  short: {\r\n    xs: 21,\r\n    sm: 10,\r\n    md: 10,\r\n    lg: 7,\r\n    xl: 7,\r\n    xxl: 7,\r\n  },\r\n  default: {\r\n    xs: 24,\r\n    sm: 12,\r\n    md: 12,\r\n    lg: 8,\r\n    xl: 8,\r\n    xxl: 8,\r\n  },\r\n  double: {\r\n    xs: 24,\r\n    sm: 24,\r\n    md: 24,\r\n    lg: 16,\r\n    xl: 16,\r\n    xxl: 16,\r\n  },\r\n  full: {\r\n    span: 24,\r\n  },\r\n  summaryColumn: {\r\n    xs: 24,\r\n    sm: 24,\r\n    md: 12,\r\n    lg: 12,\r\n    xl: 12,\r\n    xxl: 12,\r\n  }\r\n};\r\n\r\nexport const formLayout = {\r\n  layout: \"vertical\",\r\n  hideRequiredMark: true,\r\n};\r\n\r\nexport const rowLayout = {\r\n  gutter: {\r\n    xs: 16,\r\n    sm: 16,\r\n    md: 24,\r\n    lg: 32,\r\n    xl: 32,\r\n    xxl: 32,\r\n  }\r\n};\r\n\r\nexport const MAXIMUM_LAYERS = 10;\r\n","import { izolationTypes, materialCategoriesExamples, Rse, Rsi } from './izolation';\r\nimport { columnsLayout, formLayout, MAXIMUM_LAYERS, rowLayout } from './layout';\r\n\r\nconst BUILDING_ALLOW_YEARS = Object.freeze({\r\n  BEFORE1983: \"before1983\",\r\n  F1983T1991: \"1983-1991\",\r\n  F1992T1998: \"1992-1998\",\r\n  AFTER1998: \"after1998\",\r\n});\r\n\r\nconst FIELDS = Object.freeze({\r\n  BUILDING_YEAR: \"buildingYear\",\r\n  MODERNIZATION_ITEM: \"modernizationItem\",\r\n  // dependent fields\r\n  PREVIOUS_WARMED: \"previosWarmed\",\r\n  SELF_BEFORE_CALC: \"selfBeforeCalc\",\r\n  PREV_IZOLATION_TYPE: \"prevIzolationType\",\r\n  PREV_IZOLATION_WIDTH: \"prevIzolationWidth\",\r\n  MATERIAL_LAYERS: \"materialLayers\",\r\n  // subfields of layers\r\n  MATERIAL_CATEGORY: \"existingLayer\",\r\n  MATERIAL_CATEGORY_SPECIFIC: \"existingLayerSpecific\",\r\n  MATERIAL_CATEGORY_WIDTH: \"existingLayerWidth\",\r\n  // only for result calculation\r\n  PLANED_MATERIAL: \"planedMaterial\",\r\n  PLANED_LAMBDA: \"planedLambda\",\r\n  // calculated fields\r\n  REQUIRED_IZOLATION: \"requiredIzolation\",\r\n  BEFORE_WARMING_U: \"beforeWarmingU\",\r\n  RESULT: \"result\",\r\n});\r\n\r\nconst fieldNames = {\r\n  [FIELDS.BUILDING_YEAR]: \"Rok uzyskania pozwolenia na budowę\",\r\n  [FIELDS.PREVIOUS_WARMED]: \"Czy przegrody były wcześniej ocieplone?\",\r\n  [FIELDS.SELF_BEFORE_CALC]: \"Samodzielnie wyliczę współczynnik przenikania ciepła U dla przegród przed ociepleniem\",\r\n  [FIELDS.MODERNIZATION_ITEM]: \"Przedmiot modernizacji\",\r\n  [FIELDS.PREV_IZOLATION_TYPE]: \"Rodzaj istniejącego ocieplenia\",\r\n  [FIELDS.PREV_IZOLATION_WIDTH]: \"Grubość istniejącego ocieplenia [cm]\",\r\n  [FIELDS.REQUIRED_IZOLATION]: \"Wymagana nowa wartość zgodnie z WT 2021\",\r\n  [FIELDS.MATERIAL_LAYERS]: \"Warstwa materiału\",\r\n  [FIELDS.MATERIAL_CATEGORY]: \"Kategoria materiału\",\r\n  [FIELDS.MATERIAL_CATEGORY_SPECIFIC]: \"Rodzaj materiału\",\r\n  [FIELDS.MATERIAL_CATEGORY_WIDTH]: \"Grubość materiału [cm]\",\r\n  [FIELDS.BEFORE_WARMING_U]: \"Wartość przed ociepleniem\",\r\n  [FIELDS.PLANED_MATERIAL]: \"Rodzaj planowanego ocieplenia\",\r\n  [FIELDS.PLANED_LAMBDA]: \"Wartość lambda planowanego ocieplenia (λ)\",\r\n  [FIELDS.RESULT]: \"Wynik obliczeń\",\r\n};\r\n\r\nconst izolationWidthConfig = {\r\n  min: 1,\r\n  max: 50,\r\n  step: 0.5,\r\n  unit: \"cm\",\r\n};\r\n\r\nconst lambdaSelectConfig = {\r\n  min: 0.02,\r\n  max: 0.06,\r\n  step: 0.001,\r\n};\r\n\r\nconst PARTITION_TYPES = Object.freeze({\r\n  SIDE_WALLS: \"sideWalls\",\r\n  ROOF: \"roof\",\r\n  CEILING_ATTIC: \"ceilingAttic\",\r\n  FLOOR: \"floor\",\r\n  CEILING_BASEMENT: \"ceilingBasement\",\r\n});\r\n\r\nconst partitionTypes = {\r\n  [PARTITION_TYPES.SIDE_WALLS]: \"Ściany zewnętrzne / przegrody pionowe\",\r\n  [PARTITION_TYPES.ROOF]: \"Dach lub stropodach\",\r\n  [PARTITION_TYPES.CEILING_ATTIC]: \"Strop pod nieogrzewanym poddaszem\",\r\n  [PARTITION_TYPES.FLOOR]: \"Podłoga na gruncie\",\r\n  [PARTITION_TYPES.CEILING_BASEMENT]: \"Strop nad nieogrzewaną piwnicą\",\r\n};\r\n\r\nconst requiredIzolation = {\r\n  [PARTITION_TYPES.SIDE_WALLS]: 0.2,\r\n  [PARTITION_TYPES.ROOF]: 0.15,\r\n  [PARTITION_TYPES.CEILING_ATTIC]: 0.15,\r\n  [PARTITION_TYPES.FLOOR]: 0.3,\r\n  [PARTITION_TYPES.CEILING_BASEMENT]: 0.25,\r\n};\r\n\r\nconst buildingAllowYears = {\r\n  [BUILDING_ALLOW_YEARS.BEFORE1983]: {\r\n    description: \"Przed 1983r.\",\r\n    avarageU: {\r\n      [PARTITION_TYPES.SIDE_WALLS]: 1.1,\r\n      [PARTITION_TYPES.ROOF]: 0.7,\r\n      [PARTITION_TYPES.CEILING_ATTIC]: 0.9,\r\n      [PARTITION_TYPES.FLOOR]: 0.8,\r\n      [PARTITION_TYPES.CEILING_BASEMENT]: 0.8,\r\n    },\r\n  },\r\n  [BUILDING_ALLOW_YEARS.F1983T1991]: {\r\n    description: \"1983-1991\",\r\n    avarageU: {\r\n      [PARTITION_TYPES.SIDE_WALLS]: 0.75,\r\n      [PARTITION_TYPES.ROOF]: 0.45,\r\n      [PARTITION_TYPES.CEILING_ATTIC]: 0.4,\r\n      [PARTITION_TYPES.FLOOR]: 0.8,\r\n      [PARTITION_TYPES.CEILING_BASEMENT]: 0.8,\r\n    },\r\n  },\r\n  [BUILDING_ALLOW_YEARS.F1992T1998]: {\r\n    description: \"1992-1998\",\r\n    avarageU: {\r\n      [PARTITION_TYPES.SIDE_WALLS]: 0.6,\r\n      [PARTITION_TYPES.ROOF]: 0.3,\r\n      [PARTITION_TYPES.CEILING_ATTIC]: 0.3,\r\n      [PARTITION_TYPES.FLOOR]: 0.7,\r\n      [PARTITION_TYPES.CEILING_BASEMENT]: 0.7,\r\n    },\r\n  },\r\n  [BUILDING_ALLOW_YEARS.AFTER1998]: {\r\n    description: \"Po 1998r.\",\r\n    avarageU: {\r\n      [PARTITION_TYPES.SIDE_WALLS]: 0.5,\r\n      [PARTITION_TYPES.ROOF]: 0.3,\r\n      [PARTITION_TYPES.CEILING_ATTIC]: 0.3,\r\n      [PARTITION_TYPES.FLOOR]: 0.6,\r\n      [PARTITION_TYPES.CEILING_BASEMENT]: 0.6,\r\n    },\r\n  },\r\n};\r\n\r\nconst fileName = \"obliczenia.txt\";\r\n\r\nexport {\r\n  buildingAllowYears,\r\n  columnsLayout,  \r\n  FIELDS,\r\n  fieldNames,\r\n  formLayout,\r\n  lambdaSelectConfig,\r\n  izolationTypes,\r\n  izolationWidthConfig,\r\n  materialCategoriesExamples,\r\n  MAXIMUM_LAYERS,\r\n  partitionTypes,\r\n  requiredIzolation,\r\n  rowLayout,\r\n  Rse,\r\n  Rsi,\r\n  fileName,\r\n};\r\n","import classnames from 'classnames';\r\n\r\nexport default classnames;\r\n","import { BOOLEAN_TYPES } from '../components';\r\nimport {\r\n  FIELDS,\r\n  buildingAllowYears,\r\n  izolationTypes,\r\n  Rsi,\r\n  Rse,\r\n  materialCategoriesExamples,\r\n  requiredIzolation,\r\n} from '../config';\r\n\r\nexport const canCalculatePrevU = (values) => {\r\n  if (!values[FIELDS.BUILDING_YEAR]\r\n    || !values[FIELDS.MODERNIZATION_ITEM]) {\r\n    return false;\r\n  }\r\n  if (values[FIELDS.PREVIOUS_WARMED] === BOOLEAN_TYPES.YES) {\r\n    return values[FIELDS.PREV_IZOLATION_TYPE]\r\n      && values[FIELDS.PREV_IZOLATION_WIDTH];\r\n  } else {\r\n    return values[FIELDS.SELF_BEFORE_CALC] === BOOLEAN_TYPES.NO\r\n      || checkLayersData(values[FIELDS.MATERIAL_LAYERS]);\r\n  }\r\n};\r\n\r\nconst checkLayersData = (layers) => layers && layers.length > 0 && !layers.some(\r\n  x => !(x && x[FIELDS.MATERIAL_CATEGORY] && x[FIELDS.MATERIAL_CATEGORY_SPECIFIC] !== undefined && x[FIELDS.MATERIAL_CATEGORY_WIDTH]));\r\n\r\nexport const calculatePrevU = (values) => {\r\n  const {\r\n    [FIELDS.BUILDING_YEAR]: year,\r\n    [FIELDS.PREVIOUS_WARMED]: warmed,\r\n    [FIELDS.SELF_BEFORE_CALC]: self,\r\n    [FIELDS.MODERNIZATION_ITEM]: what,\r\n    [FIELDS.PREV_IZOLATION_TYPE]: prevIzolation,\r\n    [FIELDS.PREV_IZOLATION_WIDTH]: prevIzolationWidth,\r\n    [FIELDS.MATERIAL_LAYERS]: materialLayers,\r\n  } = values;\r\n  if (warmed === BOOLEAN_TYPES.YES) {\r\n    return 1 / (layerResistance(prevIzolationWidth, izolationTypes[prevIzolation].defaultValue / 1000)\r\n      + 1 / buildingAllowYears[year].avarageU[what])\r\n  }\r\n  else {\r\n    if (self === BOOLEAN_TYPES.YES) {\r\n      return 1 / (layersResistance(materialLayers) + Rse + Rsi);\r\n    }\r\n    return buildingAllowYears[year].avarageU[what];\r\n  }\r\n}\r\n\r\nexport const canCalculateWidth = (values) => {\r\n  const planedMaterial = values[FIELDS.PLANED_MATERIAL];\r\n  const planedLambda = values[FIELDS.PLANED_LAMBDA];\r\n  return canCalculatePrevU(values) && planedMaterial && planedLambda;\r\n}\r\n\r\nexport const calculateRequiredWidth = (values) => {\r\n  const planedLambda = values[FIELDS.PLANED_LAMBDA];\r\n  const modernizedItem = values[FIELDS.MODERNIZATION_ITEM];\r\n\r\n  const prevU = calculatePrevU(values);\r\n  const requiredU = requiredIzolation[modernizedItem];\r\n\r\n  return planedLambda * (1 / requiredU - 1 / prevU) * 100;\r\n}\r\n\r\nconst layersResistance = (layers) => layers.reduce((res, {\r\n  [FIELDS.MATERIAL_CATEGORY]: category,\r\n  [FIELDS.MATERIAL_CATEGORY_SPECIFIC]: idx,\r\n  [FIELDS.MATERIAL_CATEGORY_WIDTH]: width\r\n}) =>\r\n  res + layerResistance(width, materialCategoriesExamples[category].examples[idx].value), 0);\r\n\r\nconst layerResistance = (width, lambda) => width / 100 / lambda;\r\n","export const formatNumber = (num, { position = 0 } = {}) =>\r\n  (position < 0 ? parseFloat(num.toFixed(-position)) : Math.round(num / 10 ** position) * 10 ** position);\r\n\r\nexport const roundToStep = (num, step) =>\r\n  Math.round(num / step) * step;\r\n","import React from 'react';\r\nimport { Radio } from 'antd';\r\nimport { cx } from '../utils';\r\nimport styles from './YesNo.module.scss';\r\n\r\nexport const BOOLEAN_TYPES = Object.freeze({\r\n  YES: \"YES\",\r\n  NO: \"NO\",\r\n});\r\n\r\nexport const booleanMap = {\r\n  [BOOLEAN_TYPES.YES]: \"TAK\",\r\n  [BOOLEAN_TYPES.NO]: \"NIE\",\r\n};\r\n\r\nexport default ({className, ...props}) => (\r\n  <Radio.Group buttonStyle=\"solid\" className={cx(styles.RadioGroup, className)} {...props}>\r\n    {Object.keys(BOOLEAN_TYPES).map(bool => (\r\n      <Radio.Button className={styles.RadioItem} value={bool} key={bool}>{booleanMap[bool]}</Radio.Button>\r\n    ))}\r\n  </Radio.Group>\r\n);\r\n","import { fileName } from \"../config/index\";\r\nimport { booleanMap, BOOLEAN_TYPES } from \"../components/YesNo\";\r\nimport { calculatePrevU, formatNumber } from \"./index\";\r\nimport { calculateRequiredWidth } from './calculations';\r\nimport {\r\n  fieldNames,\r\n  FIELDS,\r\n  buildingAllowYears,\r\n  partitionTypes,\r\n  izolationTypes,\r\n  izolationWidthConfig,\r\n  requiredIzolation,\r\n  materialCategoriesExamples,\r\n} from \"../config\";\r\n\r\nexport const saveFile = (values) => {\r\n  const contents = getFileContents(values);\r\n\r\n  downloadFile(fileName, contents);\r\n};\r\n\r\nconst getFileContents = (values) => {\r\n  const {\r\n    [FIELDS.BUILDING_YEAR]: buildingYear,\r\n    [FIELDS.PREVIOUS_WARMED]: warmed,\r\n    [FIELDS.SELF_BEFORE_CALC]: self,\r\n    [FIELDS.PREV_IZOLATION_TYPE]: prevIzolation,\r\n    [FIELDS.PREV_IZOLATION_WIDTH]: prevIzolationWidth,\r\n    [FIELDS.MATERIAL_LAYERS]: materialLayers,\r\n    [FIELDS.MODERNIZATION_ITEM]: modernizationItem,\r\n    [FIELDS.PLANED_LAMBDA]: plannedLambda,\r\n    [FIELDS.PLANED_MATERIAL]: plannedMaterial,\r\n  } = values;\r\n\r\n  const existingIzolation = warmed === BOOLEAN_TYPES.YES\r\n    ? \r\n    `${fieldNames[FIELDS.PREV_IZOLATION_TYPE]}: ${izolationTypes[prevIzolation].description}\r\n    ${fieldNames[FIELDS.PREV_IZOLATION_WIDTH]}: ${prevIzolationWidth} ${izolationWidthConfig.unit}\r\n    `\r\n    : '';\r\n\r\n  const selfBeforeCalculations = self === BOOLEAN_TYPES.YES\r\n    ? \r\n    `${materialLayers.map((layer, index) => {\r\n        return `\r\n          Przegroda ${index + 1}.\r\n          ${fieldNames[FIELDS.MATERIAL_CATEGORY]}: ${materialCategoriesExamples[layer.existingLayer].description}\r\n          ${fieldNames[FIELDS.MATERIAL_CATEGORY_SPECIFIC]}: ${materialCategoriesExamples[layer.existingLayer].examples[layer.existingLayerSpecific].description}\r\n          ${fieldNames[FIELDS.MATERIAL_CATEGORY_WIDTH]}: ${layer.existingLayerWidth} ${izolationWidthConfig.unit}\r\n        `\r\n    }).join('')}`\r\n    : '';\r\n\r\n  const result = (width => {\r\n    return width > 0 \r\n      ? `Minimalna wymagana grubość ocieplenia: ${Math.ceil(width)} ${izolationWidthConfig.unit}` \r\n      : \"Przegroda nie wymaga docieplenia\"\r\n  })(calculateRequiredWidth(values));\r\n\r\n  const plannedMaterialText =\r\n    plannedMaterial === \"otherMaterial\"\r\n      ? \"Inny\"\r\n      : izolationTypes[plannedMaterial].description;\r\n\r\n  return (\r\n    `${fieldNames[FIELDS.BUILDING_YEAR]}: ${buildingAllowYears[buildingYear].description}\r\n    ${fieldNames[FIELDS.MODERNIZATION_ITEM]}: ${partitionTypes[modernizationItem]}\r\n    ${fieldNames[FIELDS.PREVIOUS_WARMED]} ${booleanMap[warmed]}\r\n    ${existingIzolation}` +\r\n    `${fieldNames[FIELDS.SELF_BEFORE_CALC]}: ${booleanMap[self]}\r\n    ${selfBeforeCalculations}` +\r\n    `\r\n    Wyliczone wartości współczynników U:\r\n    ${fieldNames[FIELDS.REQUIRED_IZOLATION]}: ${requiredIzolation[modernizationItem]}\r\n    ${fieldNames[FIELDS.BEFORE_WARMING_U]}: ${formatNumber(calculatePrevU(values), { position: -3 })}\r\n    \r\n    ${fieldNames[FIELDS.PLANED_MATERIAL]}: ${plannedMaterialText}\r\n    ${fieldNames[FIELDS.PLANED_LAMBDA]}: ${plannedLambda}\r\n\r\n    ${fieldNames[FIELDS.RESULT]}\r\n    ${result}\r\n    `).replace(/  +/g, ''); // replace removes indentation at the beginning of every row\r\n};\r\n\r\nconst downloadFile = (fileName, text) => {\r\n  var pom = document.createElement(\"a\");\r\n  pom.setAttribute(\r\n    \"href\",\r\n    \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\r\n  );\r\n  pom.setAttribute(\"download\", fileName);\r\n\r\n  if (document.createEvent) {\r\n    var event = document.createEvent(\"MouseEvents\");\r\n    event.initEvent(\"click\", true, true);\r\n    pom.dispatchEvent(event);\r\n  } else {\r\n    pom.click();\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { cx } from '../utils';\r\n\r\nimport styles from './Advert.module.scss';\r\n\r\nexport const TIMEOUT = 500;\r\n\r\nconst Advert = ({ open, className, children, ...props }) => (\r\n  <CSSTransition\r\n    in={Boolean(open)}\r\n    unmountOnExit\r\n    timeout={TIMEOUT}\r\n    classNames={{\r\n      enter: styles.Enter,\r\n      enterActive: styles.Enter__Active,\r\n      exit: styles.Exit,\r\n      exitActive: styles.Exit__Active,\r\n    }}\r\n    {...props}\r\n  >\r\n    <div className={cx(styles.Advert, className)}>\r\n      <div className={styles.Container}>\r\n        <div className={styles.Arrow} />\r\n        {children}\r\n      </div>\r\n    </div>\r\n  </CSSTransition>\r\n);\r\n\r\nexport default Advert;\r\n","import React from 'react';\r\nimport styles from './AppWrapper.module.scss';\r\n\r\nexport default ({ children }) => (\r\n  <div className={styles.App}>\r\n    <div className={styles.Container}>\r\n      {children}\r\n    </div>\r\n  </div>);\r\n","import React from 'react';\r\nimport { Select } from 'antd';\r\nimport styles from './CustomSelect.module.scss';\r\nimport { cx } from '../utils';\r\n\r\nconst { Option } = Select;\r\n\r\nconst CustomSelect = ({ onClick, dropdownClassName, ...props }) => (<Select\r\n  dropdownClassName={cx(styles.Select, dropdownClassName)}\r\n  {...props}\r\n/>);\r\n\r\nexport default Object.assign(CustomSelect, {\r\n  Option,\r\n});\r\n","import React, { useCallback } from 'react';\r\nimport { Row, Col, Slider, InputNumber } from 'antd';\r\n\r\nimport { rowLayout } from '../config';\r\nimport { formatNumber, roundToStep } from '../utils';\r\n\r\nconst sanitize = (value, { precition, step }) => value !== undefined ?\r\n  formatNumber(roundToStep(value, step), { position: -precition })\r\n  : undefined;\r\n\r\nexport default ({\r\n  min = 0,\r\n  max = 1,\r\n  value,\r\n  onChange = () => { },\r\n  step = 1,\r\n  precition = -Math.floor(Math.log10(step)),\r\n  unit,\r\n}) => {\r\n  const valueChange = useCallback(v => {\r\n    onChange(sanitize(v, { precition, step }));\r\n  }, [onChange, precition, step]);\r\n\r\n  return (\r\n    <Row {...rowLayout}>\r\n      <Col xs={24} sm={16} md={16} lg={16} xl={16}>\r\n        <Slider\r\n          min={min}\r\n          max={max}\r\n          onChange={valueChange}\r\n          value={typeof value === 'number' ? value : min}\r\n          step={step}\r\n          tipFormatter={v => `${v}${unit ? ` ${unit}` : \"\"}`}\r\n          marks={{\r\n            [min]: {\r\n              style: {\r\n                whiteSpace: \"nowrap\",\r\n              },\r\n              label: `${min}${unit ? ` ${unit}` : \"\"}`,\r\n            },\r\n            [max]: {\r\n              style: {\r\n                whiteSpace: \"nowrap\",\r\n              },\r\n              label: `${max}${unit ? ` ${unit}` : \"\"}`,\r\n            },\r\n          }}\r\n        />\r\n      </Col>\r\n      <Col xs={24} sm={8} md={8} lg={8} xl={8}>\r\n        <InputNumber\r\n          min={min}\r\n          max={max}\r\n          style={{ width: \"100%\" }}\r\n          step={step}\r\n          value={value}\r\n          onChange={valueChange}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { Form } from 'antd';\r\n\r\nexport default ({ dependencies, requirement = () => true, children, noMatch = null, ...props }) => (\r\n  <Form.Item\r\n    noStyle\r\n    shouldUpdate={(prevValues, currentValues) => dependencies.some(x => prevValues[x] !== currentValues[x])}\r\n    {...props}\r\n  >\r\n    {({ getFieldValue }) => requirement({ getFieldValue }) ? children : noMatch}\r\n  </Form.Item>\r\n);\r\n","import React from 'react';\r\nimport { Col, Form } from 'antd';\r\n\r\nimport { columnsLayout, fieldNames } from '../config';\r\n\r\nconst Field = ({ layout = columnsLayout.default, name, children, ...props }) => (\r\n  <Col {...layout}>\r\n    <Form.Item\r\n      {...(name ? {\r\n        name,\r\n        label: fieldNames[name],\r\n        rules: [{\r\n          required: true,\r\n          message: 'Pole jest wymagane'\r\n        }],\r\n        validateTrigger: \"onChange\"\r\n      } : {})}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Form.Item>\r\n  </Col>);\r\n\r\nconst ValueProvider = ({ dependencies, children, ...props }) => (\r\n  <Form.Item\r\n    noStyle\r\n    shouldUpdate={(prevValues, currentValues) => dependencies.some(x => prevValues[x] !== currentValues[x])}\r\n    {...props}\r\n  >\r\n    {({ getFieldValue }) => children(dependencies.reduce(\r\n      (params, key) => ({ ...params, [key]: getFieldValue([key]) }), {}\r\n    ))}\r\n  </Form.Item>);\r\n\r\nexport default Object.assign(\r\n  Field,\r\n  {\r\n    ValueProvider,\r\n  },\r\n);\r\n","import React, { useCallback } from 'react';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Tooltip,\r\n  Typography,\r\n  Grid,\r\n} from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nimport {\r\n  FIELDS,\r\n  fieldNames,\r\n  izolationWidthConfig,\r\n  materialCategoriesExamples,\r\n  rowLayout,\r\n  columnsLayout,\r\n} from '../config';\r\nimport { cx } from '../utils';\r\nimport Select from './CustomSelect';\r\nimport DecimalStep from './DecimalStep';\r\nimport Field from './Field';\r\nimport styles from './MaterialLayer.module.scss';\r\n\r\nconst { Option } = Select;\r\nconst { useBreakpoint } = Grid;\r\nconst { Title } = Typography;\r\n\r\nconst sanitize = value => value || {};\r\n\r\nconst MaterialLayer = ({ counter, first, last, remove, value = {}, onChange = () => { } }) => {\r\n  const valueChange = useCallback((v, key) => {\r\n    onChange(sanitize({\r\n      ...value,\r\n      [key]: v,\r\n    }));\r\n  }, [value, onChange]);\r\n\r\n  const categoryChange = useCallback(v => {\r\n    onChange(sanitize({\r\n      ...value,\r\n      [FIELDS.MATERIAL_CATEGORY]: v,\r\n      [FIELDS.MATERIAL_CATEGORY_SPECIFIC]: undefined,\r\n    }));\r\n  }, [value, onChange]);\r\n\r\n  const breakpoints = useBreakpoint();\r\n  const responsive = !breakpoints.lg;\r\n  const fieldClassName = cx(!responsive && !last && styles.Row__New, responsive && styles.Row__Responsive);\r\n  const showLabel = first || responsive;\r\n\r\n  return (\r\n    <Row {...rowLayout}>\r\n      {!responsive && remove && (\r\n        <Field\r\n          label={first ? \" \" : undefined}\r\n          layout={columnsLayout.minimal}\r\n          className={cx(!last && styles.NewRow)}\r\n        >\r\n          <Tooltip\r\n            title=\"Usuń warstwę\"\r\n            placement=\"topRight\"\r\n          >\r\n            <Button\r\n              type=\"link\"\r\n              icon={<MinusCircleOutlined />}\r\n              onClick={() => remove()}\r\n              danger\r\n            />\r\n          </Tooltip>\r\n        </Field>\r\n      )}\r\n      {responsive && (\r\n        <Col {...columnsLayout.full}>\r\n          <Title className={styles.Title} level={4}>{`Warstwa nr ${counter + 1}`}</Title>\r\n          {remove && (\r\n            <Button\r\n              type=\"link\"\r\n              icon={<MinusCircleOutlined />}\r\n              onClick={() => remove()}\r\n              danger\r\n            > Usuń warstwę</Button>\r\n          )}\r\n        </Col>\r\n      )}\r\n      <Field\r\n        layout={(!responsive && remove) ? columnsLayout.short : columnsLayout.default}\r\n        className={fieldClassName}\r\n        label={showLabel ? fieldNames[FIELDS.MATERIAL_CATEGORY] : undefined}\r\n      >\r\n        <Select\r\n          value={value[FIELDS.MATERIAL_CATEGORY]}\r\n          onChange={categoryChange}\r\n        >\r\n          {Object.entries(materialCategoriesExamples).map(([key, { description }]) => (\r\n            <Option value={key} key={key}>{description}</Option>\r\n          ))}\r\n        </Select>\r\n      </Field>\r\n      <Field\r\n        className={fieldClassName}\r\n        label={showLabel ? fieldNames[FIELDS.MATERIAL_CATEGORY_SPECIFIC] : undefined}\r\n      >\r\n        {(category => category ? (\r\n          <Select\r\n            value={value[FIELDS.MATERIAL_CATEGORY_SPECIFIC]}\r\n            onChange={v => valueChange(v, FIELDS.MATERIAL_CATEGORY_SPECIFIC)}\r\n          >\r\n            {materialCategoriesExamples[category].examples.map(({ description }, idx) => (\r\n              <Option value={idx} key={`${idx}_${description}`}>{description}</Option>\r\n            ))}\r\n          </Select>\r\n        ) : (\r\n            <Select\r\n              disabled\r\n            />\r\n          ))(value[FIELDS.MATERIAL_CATEGORY])}\r\n      </Field>\r\n      <Field\r\n        className={fieldClassName}\r\n        label={showLabel ? fieldNames[FIELDS.MATERIAL_CATEGORY_WIDTH] : undefined}\r\n        layout={{...columnsLayout.default, sm: 24, md: 24}}\r\n      >\r\n        <DecimalStep\r\n          value={value[FIELDS.MATERIAL_CATEGORY_WIDTH]}\r\n          onChange={v => valueChange(v, FIELDS.MATERIAL_CATEGORY_WIDTH)}\r\n          {...izolationWidthConfig}\r\n        />\r\n      </Field>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst Add = ({ add, className, ...props }) => (\r\n  <Button\r\n    type=\"dashed\"\r\n    onClick={() => add()}\r\n    className={cx(styles.Add, className)}\r\n    {...props}\r\n  >\r\n    <PlusOutlined /> Dodaj warstwę\r\n  </Button>);\r\n\r\nconst Wrapper = ({ children, ...props }) => (\r\n  <Col {...props}>\r\n    {children}\r\n  </Col>\r\n)\r\n\r\nexport default Object.assign(\r\n  MaterialLayer,\r\n  {\r\n    Add,\r\n    Wrapper,\r\n  }\r\n);\r\n","import React from 'react';\r\nimport { Typography } from 'antd';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { cx } from '../utils';\r\nimport { TIMEOUT } from './Advert';\r\n\r\nimport styles from './Result.module.scss';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nexport const RESULT_STATUSES = Object.freeze({\r\n  NEUTRAL: 'neutral',\r\n  POSITIVE: 'positive',\r\n  NEGATIVE: 'negative',\r\n});\r\n\r\nexport default ({\r\n  className,\r\n  value,\r\n  label,\r\n  children,\r\n  status = RESULT_STATUSES.NEUTRAL,\r\n  ...props\r\n}) => (\r\n  <div\r\n    className={cx(\r\n      styles.Result,\r\n      status && {\r\n        [RESULT_STATUSES.NEGATIVE]: styles.Result__Negative,\r\n        [RESULT_STATUSES.NEUTRAL]: styles.Result__Neutral,\r\n        [RESULT_STATUSES.POSITIVE]: styles.Result__Positive,\r\n      }[status],\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {label && (<Title className={styles.Title} level={4}>{label}</Title>)}\r\n    <Text className={styles.Content}>{children}</Text>\r\n    {value && (<Value className={styles.Content}>{value}</Value>)}\r\n  </div>\r\n);\r\n\r\nconst Value = ({className, children, ...props}) => (\r\n  <CSSTransition\r\n    in\r\n    appear\r\n    timeout={TIMEOUT}\r\n    classNames={{\r\n      appear: styles.Appear,\r\n      appearActive: styles.Appear__Active,\r\n    }}\r\n    {...props}\r\n  >\r\n    <Text className={cx(styles.Value, className)}>{children}</Text>\r\n  </CSSTransition>\r\n)\r\n","import React from 'react';\r\n\r\nimport { cx } from '../utils';\r\nimport styles from './Summary.module.scss'\r\n\r\nexport default ({ success, children, className, ...props }) => (\r\n  <div\r\n    className={cx(\r\n      styles.Summary,\r\n      success && styles.Summary__Success,\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n} from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\n\r\nimport {\r\n  buildingAllowYears,\r\n  columnsLayout,\r\n  FIELDS,\r\n  fieldNames,\r\n  formLayout,\r\n  lambdaSelectConfig,\r\n  izolationTypes,\r\n  izolationWidthConfig,\r\n  partitionTypes,\r\n  requiredIzolation,\r\n  rowLayout,\r\n  MAXIMUM_LAYERS,\r\n} from './config';\r\nimport {\r\n  BOOLEAN_TYPES,\r\n  DecimalStep,\r\n  DependentFields,\r\n  Field,\r\n  MaterialLayer,\r\n  YesNo,\r\n  Result,\r\n  Select,\r\n  Summary,\r\n  RESULT_STATUSES,\r\n  Advert,\r\n} from './components';\r\nimport {\r\n  canCalculatePrevU,\r\n  calculatePrevU,\r\n  formatNumber,\r\n  saveFile,\r\n} from './utils';\r\nimport { calculateRequiredWidth, canCalculateWidth } from './utils/calculations';\r\n\r\nconst OTHER_MATERIAL = \"otherMaterial\";\r\n\r\nconst { Option } = Select;\r\nconst { Text, Title } = Typography;\r\n\r\nconst initialFormValue = {\r\n  [FIELDS.PREVIOUS_WARMED]: BOOLEAN_TYPES.NO,\r\n  [FIELDS.SELF_BEFORE_CALC]: BOOLEAN_TYPES.NO,\r\n};\r\n\r\nconst preCalculateDependencies = [\r\n  FIELDS.BUILDING_YEAR, FIELDS.PREVIOUS_WARMED, FIELDS.SELF_BEFORE_CALC, FIELDS.MODERNIZATION_ITEM,\r\n  FIELDS.PREV_IZOLATION_TYPE, FIELDS.PREV_IZOLATION_WIDTH, FIELDS.MATERIAL_LAYERS];\r\n\r\nconst calculateDependencies = [\r\n  ...preCalculateDependencies,\r\n  FIELDS.PLANED_MATERIAL,\r\n  FIELDS.PLANED_LAMBDA,\r\n];\r\n\r\nconst Calculator = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  // const onReset = () => {\r\n  //   form.resetFields();\r\n  // };\r\n\r\n  const changePreviosWarmed = ({ target: { value } }) => {\r\n    form.setFieldsValue({\r\n      [FIELDS.SELF_BEFORE_CALC]: BOOLEAN_TYPES.NO,\r\n      [FIELDS.PREV_IZOLATION_TYPE]: undefined,\r\n      [FIELDS.PREV_IZOLATION_WIDTH]: undefined,\r\n      [FIELDS.MATERIAL_LAYERS]: undefined,\r\n    });\r\n  }\r\n\r\n  const changeSelfCalc = ({ target: { value } }) => {\r\n    form.setFieldsValue({\r\n      [FIELDS.PREVIOUS_WARMED]: BOOLEAN_TYPES.NO,\r\n      [FIELDS.PREV_IZOLATION_TYPE]: undefined,\r\n      [FIELDS.PREV_IZOLATION_WIDTH]: undefined,\r\n      [FIELDS.MATERIAL_LAYERS]: [{}],\r\n    });\r\n  }\r\n\r\n  const changePlanedMaterial = (value) => {\r\n    form.setFieldsValue({\r\n      [FIELDS.PLANED_LAMBDA]:\r\n        value !== OTHER_MATERIAL\r\n          ? izolationTypes[value].defaultValue / 1000\r\n          : undefined,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form {...formLayout} initialValues={initialFormValue} form={form} name=\"calculator\">\r\n      <Row {...rowLayout}>\r\n        <Field name={FIELDS.BUILDING_YEAR}>\r\n          <Select>\r\n            {Object.entries(buildingAllowYears).map(([key, { description }]) => (\r\n              <Option value={key} key={key}>{description}</Option>\r\n            ))}\r\n          </Select>\r\n        </Field>\r\n      </Row>\r\n      <Row {...rowLayout}>\r\n        <Field name={FIELDS.MODERNIZATION_ITEM}>\r\n          <Select>\r\n            {Object.entries(partitionTypes).map(([key, description]) => (\r\n              <Option value={key} key={key}>{description}</Option>\r\n            ))}\r\n          </Select>\r\n        </Field>\r\n      </Row>\r\n      <Row {...rowLayout}>\r\n        <Field name={FIELDS.PREVIOUS_WARMED}>\r\n          <YesNo onChange={changePreviosWarmed} />\r\n        </Field>\r\n      </Row>\r\n      <DependentFields\r\n        dependencies={[FIELDS.PREVIOUS_WARMED]}\r\n        requirement={(...args) => !previoslyWarmed(...args)}\r\n      >\r\n        <Row {...rowLayout}>\r\n          <Field name={FIELDS.SELF_BEFORE_CALC}>\r\n            <YesNo onChange={changeSelfCalc} />\r\n          </Field>\r\n        </Row>\r\n      </DependentFields>\r\n      <DependentFields\r\n        dependencies={[FIELDS.PREVIOUS_WARMED]}\r\n        requirement={previoslyWarmed}\r\n      >\r\n        <Row {...rowLayout}>\r\n          <Col {...columnsLayout.full}>\r\n            <Title level={4}>\r\n              Istniejąca izolacja\r\n            </Title>\r\n          </Col>\r\n          <Field name={FIELDS.PREV_IZOLATION_TYPE}>\r\n            <Select>\r\n              {Object.entries(izolationTypes).map(([key, { description }]) => (\r\n                <Option value={key} key={key}>{description}</Option>\r\n              ))}\r\n            </Select>\r\n          </Field>\r\n          <Field name={FIELDS.PREV_IZOLATION_WIDTH}>\r\n            <DecimalStep\r\n              {...izolationWidthConfig}\r\n            />\r\n          </Field>\r\n        </Row>\r\n      </DependentFields>\r\n      <DependentFields\r\n        dependencies={[FIELDS.SELF_BEFORE_CALC]}\r\n        requirement={selfCalcutation}\r\n      >\r\n        <Row {...rowLayout}>\r\n          <Col {...columnsLayout.full}>\r\n            <Title level={4}>\r\n              Samodzielne wyliczenie współczynnika U dla przegród przed ociepleniem\r\n            </Title>\r\n          </Col>\r\n          <Form.List name={FIELDS.MATERIAL_LAYERS}>\r\n            {(fields, { add, remove }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <MaterialLayer.Wrapper {...columnsLayout.full} key={field.key}>\r\n                    <Form.Item noStyle {...field}>\r\n                      <MaterialLayer\r\n                        counter={index}\r\n                        first={index === 0}\r\n                        last={index === MAXIMUM_LAYERS - 1}\r\n                        remove={fields.length > 1 ? () => remove(field.name) : undefined}\r\n                      />\r\n                    </Form.Item>\r\n                  </MaterialLayer.Wrapper>\r\n                ))}\r\n                {fields.length < MAXIMUM_LAYERS && (\r\n                  <Field>\r\n                    <MaterialLayer.Add add={add} />\r\n                  </Field>\r\n                )}\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Row>\r\n      </DependentFields>\r\n      <Field.ValueProvider\r\n        dependencies={preCalculateDependencies}\r\n      >\r\n        {(values) => (\r\n          <Row {...rowLayout}>\r\n            <Col {...columnsLayout.double}>\r\n              <PreCalculations\r\n                values={values}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Field.ValueProvider>\r\n      <Row {...rowLayout}>\r\n        <Field name={FIELDS.PLANED_MATERIAL}>\r\n          <Select onChange={changePlanedMaterial}>\r\n            {Object.entries(izolationTypes).map(([key, { description }]) => (\r\n              <Option value={key} key={key}>{description}</Option>\r\n            ))}\r\n            <Option value={OTHER_MATERIAL} key={OTHER_MATERIAL}>Inne</Option>\r\n          </Select>\r\n        </Field>\r\n        <Field.ValueProvider\r\n          dependencies={[FIELDS.PLANED_MATERIAL]}\r\n        >\r\n          {({ [FIELDS.PLANED_MATERIAL]: value }) =>\r\n            (<Field name={FIELDS.PLANED_LAMBDA}>\r\n              {(\r\n                value === OTHER_MATERIAL ? (\r\n                  <DecimalStep {...lambdaSelectConfig} />\r\n                ) : (\r\n                    <Select disabled={!value}>\r\n                      {value && (\r\n                        ({ from, to, defaultValue }) => [...Array(to - from + 1)].map((_, index) => (\r\n                          <Option key={from + index} value={(from + index) / 1000}>\r\n                            {`${(from + index) / 1000}${from + index === defaultValue ? \" (domyślna)\" : \"\"}`}\r\n                          </Option>\r\n                        ))\r\n                      )(izolationTypes[value])}\r\n                    </Select>\r\n                  ))}\r\n            </Field>\r\n            )}\r\n        </Field.ValueProvider>\r\n      </Row>\r\n      <Field.ValueProvider\r\n        dependencies={calculateDependencies}\r\n      >\r\n        {(values) =>\r\n          (canCalculate =>\r\n            (<Row {...rowLayout}>\r\n              <Col {...columnsLayout.default}>\r\n                {canCalculate ? (\r\n                  (width =>\r\n                    (<Result\r\n                      label={fieldNames[FIELDS.RESULT]}\r\n                      status={RESULT_STATUSES.POSITIVE}\r\n                      value={width > 0 ? `${Math.ceil(width)} cm` : undefined}\r\n                    >\r\n                      {width > 0 ? \"Minimalna wymagana grubość ocieplenia: \" : \"Przegroda nie wymaga docieplenia\"}\r\n                    </Result>))(calculateRequiredWidth(values))\r\n                ) : (\r\n                    <Result\r\n                      label={fieldNames[FIELDS.RESULT]}\r\n                      status={RESULT_STATUSES.NEGATIVE}\r\n                    >\r\n                      Uzupełnij wszystkie pola przed obliczeniem\r\n                    </Result>\r\n                  )}\r\n              </Col>\r\n              <Col {...columnsLayout.default}>\r\n                <Advert open={canCalculate}>\r\n                  <div style={{paddingBottom: 16}}>Możesz zapisać wynik wykonanych obliczeń</div>\r\n                  <Button \r\n                    icon={<DownloadOutlined />} \r\n                    onClick={() => saveFile(values)}\r\n                  >\r\n                    Zapisz\r\n                  </Button>\r\n                </Advert>\r\n              </Col>\r\n            </Row>)\r\n          )(canCalculateWidth(values))}\r\n      </Field.ValueProvider>\r\n    </Form >\r\n  );\r\n};\r\n\r\nconst PreCalculations = ({\r\n  values\r\n}) => {\r\n  const canCalculate = canCalculatePrevU(values);\r\n  return (\r\n    <Summary success={canCalculate}>\r\n      <Row {...rowLayout}>\r\n        <Col\r\n          span={24}\r\n          style={{ paddingBottom: 12 }}\r\n        >\r\n          <Text strong>Wyliczone wartości współczynników U</Text>\r\n        </Col>\r\n        <Col {...columnsLayout.summaryColumn}>\r\n          <Form.Item\r\n            label={fieldNames[FIELDS.REQUIRED_IZOLATION]}\r\n          >\r\n            {values[FIELDS.MODERNIZATION_ITEM] ? (\r\n              <Text strong>{requiredIzolation[values[FIELDS.MODERNIZATION_ITEM]]}</Text>\r\n            ) : (\r\n                <Text type=\"danger\">Konieczny wybór przedmiotu modernizacji</Text>\r\n              )}\r\n          </Form.Item>\r\n        </Col>\r\n        <Col {...columnsLayout.summaryColumn}>\r\n          <Form.Item\r\n            label={fieldNames[FIELDS.BEFORE_WARMING_U]}\r\n          >\r\n            {canCalculate ? (\r\n              <Text strong>{formatNumber(calculatePrevU(values), { position: -3 })}</Text>\r\n            ) : (\r\n                <Text type=\"danger\">Konieczne uzupełnienie wszystkich pustych pól</Text>\r\n              )}\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n    </Summary>\r\n  );\r\n}\r\n\r\nconst previoslyWarmed = ({ getFieldValue }) => getFieldValue([FIELDS.PREVIOUS_WARMED]) === BOOLEAN_TYPES.YES;\r\nconst selfCalcutation = ({ getFieldValue }) => getFieldValue([FIELDS.SELF_BEFORE_CALC]) === BOOLEAN_TYPES.YES;\r\n\r\nexport default Calculator;\r\n","// IE and old browsers support\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport AppWrapper from './components/AppWrapper';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppWrapper>\n      <App />\n    </AppWrapper>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Advert\":\"Advert_Advert__37FSS\",\"Enter\":\"Advert_Enter__3IbuD\",\"Container\":\"Advert_Container__SSY22\",\"Arrow\":\"Advert_Arrow__2fnJx\",\"Enter__Active\":\"Advert_Enter__Active__3M84O\",\"Exit\":\"Advert_Exit__WN7oj\",\"Exit__Active\":\"Advert_Exit__Active__2Sop8\"};"],"sourceRoot":""}